"""Benchmarks for MOD instruction."""

from ethereum_test_tools import (
    Alloc,
    Environment,
    StateTestFiller,
    Transaction,
)
from ethereum_test_tools import Opcodes as Op
from ethereum_test_vm import Bytecode, Opcode


def pick_best(xs, d):
    """Find arguments to MOD giving the biggest result."""
    mods = [x % d for x in xs]
    index_max = max(range(len(mods)), key=mods.__getitem__)
    return index_max


def evaluate(xs, d):
    """Evaluate mod chain."""
    indexes = []
    for _ in range(750):
        i = pick_best(xs, d)
        d = xs[i] % d
        indexes.append(i)
    return indexes


def test_mod(state_test: StateTestFiller, pre: Alloc):
    """Benchmark for MOD instruction."""
    env = Environment()
    sender = pre.fund_eoa()
    post = {}

    xs = [
        43236444494015607440141505080495154399932445654715976568919931169187528239188,
        105777965273184455192929147742637094743111160210117740086738876889283177791980,
        65953689421958480284379163031189022104793097678164298920000328544846124204137,
        50555838962958859666768244375999039852090935345987449008145098846820070840849,
        113453475245602463688947768647175650503593153393058797795502044670530221350790,
        108515932427494591044498166562596753417879210560589683295016433069972281228649,
        107722439603782468610619723710494877133859581454624515618825198520300105650547,
        106459072643751286647557215675084286830523999822283951411423751004203967971365,
        114539964541068397851108711591272381832888394470830758825121311279332893192841,
        57139838140016571538944663171893621132175712073852765048630205338112940186675,
        88761917728074884944552062209595491369240700019109983916079607448076998287508,
        104533446445848322405203834135751967481158619549985970925941663895363945051353,
        101633083962374564205750776617705398522073020934676506995472923219075790864659,
        101208882220548070829583557488550098768856705701019930941525598172176842112649,
        62742163047811414741822493362602776277205609331255254122243083067565272681517,
    ]
    assert len(xs) == 15
    d = 1773207472995338907891577153413104418251941371322332249409

    code = Bytecode()

    for x in xs:
        code += Op.PUSH32(x)

    indexes = evaluate(xs, d)

    for _ in range(100):
        code += Op.PUSH32(d)
        for i in indexes:
            dup = Opcode(0x80 + (15 - i))
            code += dup + Op.MOD
        code += Op.POP

    account = pre.deploy_contract(code)

    tx = Transaction(
        to=account,
        gas_limit=30_000_000,
        gas_price=10,
        sender=sender,
    )

    state_test(env=env, pre=pre, post=post, tx=tx)


def test_mod_push31(state_test: StateTestFiller, pre: Alloc):
    """Benchmark for MOD instruction."""
    env = Environment()
    sender = pre.fund_eoa()
    post = {}

    xs = [
        309816372644617434237685619478505489470460795708439559114925508023601700521,
        324293587265372510066744592104089254172698968985251303470990750563042153955,
        356971228694836865207035709576489755268267882491185103834509699718281244405,
        436448643305604405623895241698721703051627028146168781081764027350447455163,
        305222648835293929834781997959079557500332128815688694844182671436349638154,
        250851361467425099405588420192441266403471353666535775870937592656334063675,
        305880399671659479281770029987903275698612777950470625494999313507323857090,
        273311083391355292469910454170813101805481629135071898164753646645530081326,
        432372201089609678881655258845463015908335880981157200245577960702747226648,
        324819701152349269824115522946087837313382768049954646537568335604474359773,
        282765139859427852434510918080583469892307993631103202700682671221024314773,
        304062716701715181477892517540437144899423255271742390370344544469753258428,
        398483515246728675786808704528408794313326818077254943523515981104687929651,
        326400916423404236222949603200667869050171415954145493623828743906915968970,
        265425856754166258441695968039770802044893813977384369103397132753593146062,
    ]
    assert len(xs) == 15
    d = 2579396265528964876269649691251591755231790029431504656691

    code = Bytecode()

    indexes = evaluate(xs, d)

    for _ in range(10):
        code += Op.PUSH24(d)
        for i in indexes:
            code += Op.PUSH31(xs[i])
            code += Op.MOD
        code += Op.POP

    account = pre.deploy_contract(code)

    tx = Transaction(
        to=account,
        gas_limit=30_000_000,
        gas_price=10,
        sender=sender,
    )

    state_test(env=env, pre=pre, post=post, tx=tx)
